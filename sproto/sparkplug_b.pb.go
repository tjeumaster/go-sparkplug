// * Copyright (c) 2015, 2018 Cirrus Link Solutions and others
// *
// * This program and the accompanying materials are made available under the
// * terms of the Eclipse Public License 2.0 which is available at
// * http://www.eclipse.org/legal/epl-2.0.
// *
// * SPDX-License-Identifier: EPL-2.0
// *
// * Contributors:
// *   Cirrus Link Solutions - initial implementation

//
// To compile:
// cd client_libraries/java
// protoc --proto_path=../../ --java_out=src/main/java ../../sparkplug_b.proto
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: sparkplug_b.proto

package sproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	// Unknown placeholder for future expansion.
	DataType_Unknown DataType = 0
	// Basic Types
	DataType_Int8     DataType = 1
	DataType_Int16    DataType = 2
	DataType_Int32    DataType = 3
	DataType_Int64    DataType = 4
	DataType_UInt8    DataType = 5
	DataType_UInt16   DataType = 6
	DataType_UInt32   DataType = 7
	DataType_UInt64   DataType = 8
	DataType_Float    DataType = 9
	DataType_Double   DataType = 10
	DataType_Boolean  DataType = 11
	DataType_String   DataType = 12
	DataType_DateTime DataType = 13
	DataType_Text     DataType = 14
	// Additional Metric Types
	DataType_UUID     DataType = 15
	DataType_DataSet  DataType = 16
	DataType_Bytes    DataType = 17
	DataType_File     DataType = 18
	DataType_Template DataType = 19
	// Additional PropertyValue Types
	DataType_PropertySet     DataType = 20
	DataType_PropertySetList DataType = 21
	// Array Types
	DataType_Int8Array     DataType = 22
	DataType_Int16Array    DataType = 23
	DataType_Int32Array    DataType = 24
	DataType_Int64Array    DataType = 25
	DataType_UInt8Array    DataType = 26
	DataType_UInt16Array   DataType = 27
	DataType_UInt32Array   DataType = 28
	DataType_UInt64Array   DataType = 29
	DataType_FloatArray    DataType = 30
	DataType_DoubleArray   DataType = 31
	DataType_BooleanArray  DataType = 32
	DataType_StringArray   DataType = 33
	DataType_DateTimeArray DataType = 34
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "Unknown",
		1:  "Int8",
		2:  "Int16",
		3:  "Int32",
		4:  "Int64",
		5:  "UInt8",
		6:  "UInt16",
		7:  "UInt32",
		8:  "UInt64",
		9:  "Float",
		10: "Double",
		11: "Boolean",
		12: "String",
		13: "DateTime",
		14: "Text",
		15: "UUID",
		16: "DataSet",
		17: "Bytes",
		18: "File",
		19: "Template",
		20: "PropertySet",
		21: "PropertySetList",
		22: "Int8Array",
		23: "Int16Array",
		24: "Int32Array",
		25: "Int64Array",
		26: "UInt8Array",
		27: "UInt16Array",
		28: "UInt32Array",
		29: "UInt64Array",
		30: "FloatArray",
		31: "DoubleArray",
		32: "BooleanArray",
		33: "StringArray",
		34: "DateTimeArray",
	}
	DataType_value = map[string]int32{
		"Unknown":         0,
		"Int8":            1,
		"Int16":           2,
		"Int32":           3,
		"Int64":           4,
		"UInt8":           5,
		"UInt16":          6,
		"UInt32":          7,
		"UInt64":          8,
		"Float":           9,
		"Double":          10,
		"Boolean":         11,
		"String":          12,
		"DateTime":        13,
		"Text":            14,
		"UUID":            15,
		"DataSet":         16,
		"Bytes":           17,
		"File":            18,
		"Template":        19,
		"PropertySet":     20,
		"PropertySetList": 21,
		"Int8Array":       22,
		"Int16Array":      23,
		"Int32Array":      24,
		"Int64Array":      25,
		"UInt8Array":      26,
		"UInt16Array":     27,
		"UInt32Array":     28,
		"UInt64Array":     29,
		"FloatArray":      30,
		"DoubleArray":     31,
		"BooleanArray":    32,
		"StringArray":     33,
		"DateTimeArray":   34,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_sparkplug_b_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_sparkplug_b_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DataType(num)
	return nil
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0}
}

type Payload struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Timestamp       *uint64                `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"` // Timestamp at message sending time
	Metrics         []*Payload_Metric      `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"`      // Repeated forever - no limit in Google Protobufs
	Seq             *uint64                `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`             // Sequence number
	Uuid            *string                `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`            // UUID to track message type in terms of schema definitions
	Body            []byte                 `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`            // To optionally bypass the whole definition above
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_sparkplug_b_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0}
}

func (x *Payload) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Payload) GetMetrics() []*Payload_Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Payload) GetSeq() uint64 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *Payload) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *Payload) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type Payload_Template struct {
	state           protoimpl.MessageState        `protogen:"open.v1"`
	Version         *string                       `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"` // The version of the Template to prevent mismatches
	Metrics         []*Payload_Metric             `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"` // Each metric includes a name, datatype, and optionally a value
	Parameters      []*Payload_Template_Parameter `protobuf:"bytes,3,rep,name=parameters" json:"parameters,omitempty"`
	TemplateRef     *string                       `protobuf:"bytes,4,opt,name=template_ref,json=templateRef" json:"template_ref,omitempty"` // MUST be a reference to a template definition if this is an instance (i.e. the name of the template definition) - MUST be omitted for template definitions
	IsDefinition    *bool                         `protobuf:"varint,5,opt,name=is_definition,json=isDefinition" json:"is_definition,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_Template) Reset() {
	*x = Payload_Template{}
	mi := &file_sparkplug_b_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Template) ProtoMessage() {}

func (x *Payload_Template) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Template.ProtoReflect.Descriptor instead.
func (*Payload_Template) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Payload_Template) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Payload_Template) GetMetrics() []*Payload_Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Payload_Template) GetParameters() []*Payload_Template_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Payload_Template) GetTemplateRef() string {
	if x != nil && x.TemplateRef != nil {
		return *x.TemplateRef
	}
	return ""
}

func (x *Payload_Template) GetIsDefinition() bool {
	if x != nil && x.IsDefinition != nil {
		return *x.IsDefinition
	}
	return false
}

type Payload_DataSet struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NumOfColumns    *uint64                `protobuf:"varint,1,opt,name=num_of_columns,json=numOfColumns" json:"num_of_columns,omitempty"`
	Columns         []string               `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	Types           []uint32               `protobuf:"varint,3,rep,name=types" json:"types,omitempty"`
	Rows            []*Payload_DataSet_Row `protobuf:"bytes,4,rep,name=rows" json:"rows,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_DataSet) Reset() {
	*x = Payload_DataSet{}
	mi := &file_sparkplug_b_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_DataSet) ProtoMessage() {}

func (x *Payload_DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_DataSet.ProtoReflect.Descriptor instead.
func (*Payload_DataSet) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Payload_DataSet) GetNumOfColumns() uint64 {
	if x != nil && x.NumOfColumns != nil {
		return *x.NumOfColumns
	}
	return 0
}

func (x *Payload_DataSet) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Payload_DataSet) GetTypes() []uint32 {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Payload_DataSet) GetRows() []*Payload_DataSet_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Payload_PropertyValue struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Type   *uint32                `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	IsNull *bool                  `protobuf:"varint,2,opt,name=is_null,json=isNull" json:"is_null,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*Payload_PropertyValue_IntValue
	//	*Payload_PropertyValue_LongValue
	//	*Payload_PropertyValue_FloatValue
	//	*Payload_PropertyValue_DoubleValue
	//	*Payload_PropertyValue_BooleanValue
	//	*Payload_PropertyValue_StringValue
	//	*Payload_PropertyValue_PropertysetValue
	//	*Payload_PropertyValue_PropertysetsValue
	//	*Payload_PropertyValue_ExtensionValue
	Value         isPayload_PropertyValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload_PropertyValue) Reset() {
	*x = Payload_PropertyValue{}
	mi := &file_sparkplug_b_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_PropertyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_PropertyValue) ProtoMessage() {}

func (x *Payload_PropertyValue) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_PropertyValue.ProtoReflect.Descriptor instead.
func (*Payload_PropertyValue) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Payload_PropertyValue) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Payload_PropertyValue) GetIsNull() bool {
	if x != nil && x.IsNull != nil {
		return *x.IsNull
	}
	return false
}

func (x *Payload_PropertyValue) GetValue() isPayload_PropertyValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Payload_PropertyValue) GetIntValue() uint32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Payload_PropertyValue) GetLongValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_LongValue); ok {
			return x.LongValue
		}
	}
	return 0
}

func (x *Payload_PropertyValue) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Payload_PropertyValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Payload_PropertyValue) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *Payload_PropertyValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Payload_PropertyValue) GetPropertysetValue() *Payload_PropertySet {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_PropertysetValue); ok {
			return x.PropertysetValue
		}
	}
	return nil
}

func (x *Payload_PropertyValue) GetPropertysetsValue() *Payload_PropertySetList {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_PropertysetsValue); ok {
			return x.PropertysetsValue
		}
	}
	return nil
}

func (x *Payload_PropertyValue) GetExtensionValue() *Payload_PropertyValue_PropertyValueExtension {
	if x != nil {
		if x, ok := x.Value.(*Payload_PropertyValue_ExtensionValue); ok {
			return x.ExtensionValue
		}
	}
	return nil
}

type isPayload_PropertyValue_Value interface {
	isPayload_PropertyValue_Value()
}

type Payload_PropertyValue_IntValue struct {
	IntValue uint32 `protobuf:"varint,3,opt,name=int_value,json=intValue,oneof"`
}

type Payload_PropertyValue_LongValue struct {
	LongValue uint64 `protobuf:"varint,4,opt,name=long_value,json=longValue,oneof"`
}

type Payload_PropertyValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,5,opt,name=float_value,json=floatValue,oneof"`
}

type Payload_PropertyValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,6,opt,name=double_value,json=doubleValue,oneof"`
}

type Payload_PropertyValue_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,7,opt,name=boolean_value,json=booleanValue,oneof"`
}

type Payload_PropertyValue_StringValue struct {
	StringValue string `protobuf:"bytes,8,opt,name=string_value,json=stringValue,oneof"`
}

type Payload_PropertyValue_PropertysetValue struct {
	PropertysetValue *Payload_PropertySet `protobuf:"bytes,9,opt,name=propertyset_value,json=propertysetValue,oneof"`
}

type Payload_PropertyValue_PropertysetsValue struct {
	PropertysetsValue *Payload_PropertySetList `protobuf:"bytes,10,opt,name=propertysets_value,json=propertysetsValue,oneof"` // List of Property Values
}

type Payload_PropertyValue_ExtensionValue struct {
	ExtensionValue *Payload_PropertyValue_PropertyValueExtension `protobuf:"bytes,11,opt,name=extension_value,json=extensionValue,oneof"`
}

func (*Payload_PropertyValue_IntValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_LongValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_FloatValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_DoubleValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_BooleanValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_StringValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_PropertysetValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_PropertysetsValue) isPayload_PropertyValue_Value() {}

func (*Payload_PropertyValue_ExtensionValue) isPayload_PropertyValue_Value() {}

type Payload_PropertySet struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	Keys            []string                 `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"` // Names of the properties
	Values          []*Payload_PropertyValue `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_PropertySet) Reset() {
	*x = Payload_PropertySet{}
	mi := &file_sparkplug_b_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_PropertySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_PropertySet) ProtoMessage() {}

func (x *Payload_PropertySet) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_PropertySet.ProtoReflect.Descriptor instead.
func (*Payload_PropertySet) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Payload_PropertySet) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Payload_PropertySet) GetValues() []*Payload_PropertyValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type Payload_PropertySetList struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Propertyset     []*Payload_PropertySet `protobuf:"bytes,1,rep,name=propertyset" json:"propertyset,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_PropertySetList) Reset() {
	*x = Payload_PropertySetList{}
	mi := &file_sparkplug_b_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_PropertySetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_PropertySetList) ProtoMessage() {}

func (x *Payload_PropertySetList) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_PropertySetList.ProtoReflect.Descriptor instead.
func (*Payload_PropertySetList) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Payload_PropertySetList) GetPropertyset() []*Payload_PropertySet {
	if x != nil {
		return x.Propertyset
	}
	return nil
}

type Payload_MetaData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bytes specific metadata
	IsMultiPart *bool `protobuf:"varint,1,opt,name=is_multi_part,json=isMultiPart" json:"is_multi_part,omitempty"`
	// General metadata
	ContentType *string `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"` // Content/Media type
	Size        *uint64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`                                 // File size, String size, Multi-part size, etc
	Seq         *uint64 `protobuf:"varint,4,opt,name=seq" json:"seq,omitempty"`                                   // Sequence number for multi-part messages
	// File metadata
	FileName *string `protobuf:"bytes,5,opt,name=file_name,json=fileName" json:"file_name,omitempty"` // File name
	FileType *string `protobuf:"bytes,6,opt,name=file_type,json=fileType" json:"file_type,omitempty"` // File type (i.e. xml, json, txt, cpp, etc)
	Md5      *string `protobuf:"bytes,7,opt,name=md5" json:"md5,omitempty"`                           // md5 of data
	// Catchalls and future expansion
	Description     *string `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"` // Could be anything such as json or xml of custom properties
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_MetaData) Reset() {
	*x = Payload_MetaData{}
	mi := &file_sparkplug_b_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_MetaData) ProtoMessage() {}

func (x *Payload_MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_MetaData.ProtoReflect.Descriptor instead.
func (*Payload_MetaData) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Payload_MetaData) GetIsMultiPart() bool {
	if x != nil && x.IsMultiPart != nil {
		return *x.IsMultiPart
	}
	return false
}

func (x *Payload_MetaData) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *Payload_MetaData) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *Payload_MetaData) GetSeq() uint64 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *Payload_MetaData) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *Payload_MetaData) GetFileType() string {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return ""
}

func (x *Payload_MetaData) GetMd5() string {
	if x != nil && x.Md5 != nil {
		return *x.Md5
	}
	return ""
}

func (x *Payload_MetaData) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Payload_Metric struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`                                      // Metric name - should only be included on birth
	Alias        *uint64                `protobuf:"varint,2,opt,name=alias" json:"alias,omitempty"`                                   // Metric alias - tied to name on birth and included in all later DATA messages
	Timestamp    *uint64                `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`                           // Timestamp associated with data acquisition time
	Datatype     *uint32                `protobuf:"varint,4,opt,name=datatype" json:"datatype,omitempty"`                             // DataType of the metric/tag value
	IsHistorical *bool                  `protobuf:"varint,5,opt,name=is_historical,json=isHistorical" json:"is_historical,omitempty"` // If this is historical data and should not update real time tag
	IsTransient  *bool                  `protobuf:"varint,6,opt,name=is_transient,json=isTransient" json:"is_transient,omitempty"`    // Tells consuming clients such as MQTT Engine to not store this as a tag
	IsNull       *bool                  `protobuf:"varint,7,opt,name=is_null,json=isNull" json:"is_null,omitempty"`                   // If this is null - explicitly say so rather than using -1, false, etc for some datatypes.
	Metadata     *Payload_MetaData      `protobuf:"bytes,8,opt,name=metadata" json:"metadata,omitempty"`                              // Metadata for the payload
	Properties   *Payload_PropertySet   `protobuf:"bytes,9,opt,name=properties" json:"properties,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*Payload_Metric_IntValue
	//	*Payload_Metric_LongValue
	//	*Payload_Metric_FloatValue
	//	*Payload_Metric_DoubleValue
	//	*Payload_Metric_BooleanValue
	//	*Payload_Metric_StringValue
	//	*Payload_Metric_BytesValue
	//	*Payload_Metric_DatasetValue
	//	*Payload_Metric_TemplateValue
	//	*Payload_Metric_ExtensionValue
	Value         Payload_Metric_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload_Metric) Reset() {
	*x = Payload_Metric{}
	mi := &file_sparkplug_b_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Metric) ProtoMessage() {}

func (x *Payload_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Metric.ProtoReflect.Descriptor instead.
func (*Payload_Metric) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Payload_Metric) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Payload_Metric) GetAlias() uint64 {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return 0
}

func (x *Payload_Metric) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Payload_Metric) GetDatatype() uint32 {
	if x != nil && x.Datatype != nil {
		return *x.Datatype
	}
	return 0
}

func (x *Payload_Metric) GetIsHistorical() bool {
	if x != nil && x.IsHistorical != nil {
		return *x.IsHistorical
	}
	return false
}

func (x *Payload_Metric) GetIsTransient() bool {
	if x != nil && x.IsTransient != nil {
		return *x.IsTransient
	}
	return false
}

func (x *Payload_Metric) GetIsNull() bool {
	if x != nil && x.IsNull != nil {
		return *x.IsNull
	}
	return false
}

func (x *Payload_Metric) GetMetadata() *Payload_MetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Payload_Metric) GetProperties() *Payload_PropertySet {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Payload_Metric) GetValue() Payload_Metric_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Payload_Metric) GetIntValue() uint32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Payload_Metric) GetLongValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_LongValue); ok {
			return x.LongValue
		}
	}
	return 0
}

func (x *Payload_Metric) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Payload_Metric) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Payload_Metric) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *Payload_Metric) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Payload_Metric) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *Payload_Metric) GetDatasetValue() *Payload_DataSet {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_DatasetValue); ok {
			return x.DatasetValue
		}
	}
	return nil
}

func (x *Payload_Metric) GetTemplateValue() *Payload_Template {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_TemplateValue); ok {
			return x.TemplateValue
		}
	}
	return nil
}

func (x *Payload_Metric) GetExtensionValue() *Payload_Metric_MetricValueExtension {
	if x != nil {
		if x, ok := x.Value.(*Payload_Metric_ExtensionValue); ok {
			return x.ExtensionValue
		}
	}
	return nil
}

type Payload_Metric_Value interface {
	isPayload_Metric_Value()
}

type Payload_Metric_IntValue struct {
	IntValue uint32 `protobuf:"varint,10,opt,name=int_value,json=intValue,oneof"`
}

type Payload_Metric_LongValue struct {
	LongValue uint64 `protobuf:"varint,11,opt,name=long_value,json=longValue,oneof"`
}

type Payload_Metric_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,12,opt,name=float_value,json=floatValue,oneof"`
}

type Payload_Metric_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,13,opt,name=double_value,json=doubleValue,oneof"`
}

type Payload_Metric_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,14,opt,name=boolean_value,json=booleanValue,oneof"`
}

type Payload_Metric_StringValue struct {
	StringValue string `protobuf:"bytes,15,opt,name=string_value,json=stringValue,oneof"`
}

type Payload_Metric_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,16,opt,name=bytes_value,json=bytesValue,oneof"` // Bytes, File
}

type Payload_Metric_DatasetValue struct {
	DatasetValue *Payload_DataSet `protobuf:"bytes,17,opt,name=dataset_value,json=datasetValue,oneof"`
}

type Payload_Metric_TemplateValue struct {
	TemplateValue *Payload_Template `protobuf:"bytes,18,opt,name=template_value,json=templateValue,oneof"`
}

type Payload_Metric_ExtensionValue struct {
	ExtensionValue *Payload_Metric_MetricValueExtension `protobuf:"bytes,19,opt,name=extension_value,json=extensionValue,oneof"`
}

func (*Payload_Metric_IntValue) isPayload_Metric_Value() {}

func (*Payload_Metric_LongValue) isPayload_Metric_Value() {}

func (*Payload_Metric_FloatValue) isPayload_Metric_Value() {}

func (*Payload_Metric_DoubleValue) isPayload_Metric_Value() {}

func (*Payload_Metric_BooleanValue) isPayload_Metric_Value() {}

func (*Payload_Metric_StringValue) isPayload_Metric_Value() {}

func (*Payload_Metric_BytesValue) isPayload_Metric_Value() {}

func (*Payload_Metric_DatasetValue) isPayload_Metric_Value() {}

func (*Payload_Metric_TemplateValue) isPayload_Metric_Value() {}

func (*Payload_Metric_ExtensionValue) isPayload_Metric_Value() {}

type Payload_Template_Parameter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type  *uint32                `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*Payload_Template_Parameter_IntValue
	//	*Payload_Template_Parameter_LongValue
	//	*Payload_Template_Parameter_FloatValue
	//	*Payload_Template_Parameter_DoubleValue
	//	*Payload_Template_Parameter_BooleanValue
	//	*Payload_Template_Parameter_StringValue
	//	*Payload_Template_Parameter_ExtensionValue
	Value         isPayload_Template_Parameter_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload_Template_Parameter) Reset() {
	*x = Payload_Template_Parameter{}
	mi := &file_sparkplug_b_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_Template_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Template_Parameter) ProtoMessage() {}

func (x *Payload_Template_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Template_Parameter.ProtoReflect.Descriptor instead.
func (*Payload_Template_Parameter) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Payload_Template_Parameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Payload_Template_Parameter) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Payload_Template_Parameter) GetValue() isPayload_Template_Parameter_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Payload_Template_Parameter) GetIntValue() uint32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Payload_Template_Parameter) GetLongValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_LongValue); ok {
			return x.LongValue
		}
	}
	return 0
}

func (x *Payload_Template_Parameter) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Payload_Template_Parameter) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Payload_Template_Parameter) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *Payload_Template_Parameter) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Payload_Template_Parameter) GetExtensionValue() *Payload_Template_Parameter_ParameterValueExtension {
	if x != nil {
		if x, ok := x.Value.(*Payload_Template_Parameter_ExtensionValue); ok {
			return x.ExtensionValue
		}
	}
	return nil
}

type isPayload_Template_Parameter_Value interface {
	isPayload_Template_Parameter_Value()
}

type Payload_Template_Parameter_IntValue struct {
	IntValue uint32 `protobuf:"varint,3,opt,name=int_value,json=intValue,oneof"`
}

type Payload_Template_Parameter_LongValue struct {
	LongValue uint64 `protobuf:"varint,4,opt,name=long_value,json=longValue,oneof"`
}

type Payload_Template_Parameter_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,5,opt,name=float_value,json=floatValue,oneof"`
}

type Payload_Template_Parameter_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,6,opt,name=double_value,json=doubleValue,oneof"`
}

type Payload_Template_Parameter_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,7,opt,name=boolean_value,json=booleanValue,oneof"`
}

type Payload_Template_Parameter_StringValue struct {
	StringValue string `protobuf:"bytes,8,opt,name=string_value,json=stringValue,oneof"`
}

type Payload_Template_Parameter_ExtensionValue struct {
	ExtensionValue *Payload_Template_Parameter_ParameterValueExtension `protobuf:"bytes,9,opt,name=extension_value,json=extensionValue,oneof"`
}

func (*Payload_Template_Parameter_IntValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_LongValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_FloatValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_DoubleValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_BooleanValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_StringValue) isPayload_Template_Parameter_Value() {}

func (*Payload_Template_Parameter_ExtensionValue) isPayload_Template_Parameter_Value() {}

type Payload_Template_Parameter_ParameterValueExtension struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_Template_Parameter_ParameterValueExtension) Reset() {
	*x = Payload_Template_Parameter_ParameterValueExtension{}
	mi := &file_sparkplug_b_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_Template_Parameter_ParameterValueExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Template_Parameter_ParameterValueExtension) ProtoMessage() {}

func (x *Payload_Template_Parameter_ParameterValueExtension) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Template_Parameter_ParameterValueExtension.ProtoReflect.Descriptor instead.
func (*Payload_Template_Parameter_ParameterValueExtension) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type Payload_DataSet_DataSetValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Payload_DataSet_DataSetValue_IntValue
	//	*Payload_DataSet_DataSetValue_LongValue
	//	*Payload_DataSet_DataSetValue_FloatValue
	//	*Payload_DataSet_DataSetValue_DoubleValue
	//	*Payload_DataSet_DataSetValue_BooleanValue
	//	*Payload_DataSet_DataSetValue_StringValue
	//	*Payload_DataSet_DataSetValue_ExtensionValue
	Value         isPayload_DataSet_DataSetValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload_DataSet_DataSetValue) Reset() {
	*x = Payload_DataSet_DataSetValue{}
	mi := &file_sparkplug_b_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_DataSet_DataSetValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_DataSet_DataSetValue) ProtoMessage() {}

func (x *Payload_DataSet_DataSetValue) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_DataSet_DataSetValue.ProtoReflect.Descriptor instead.
func (*Payload_DataSet_DataSetValue) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Payload_DataSet_DataSetValue) GetValue() isPayload_DataSet_DataSetValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Payload_DataSet_DataSetValue) GetIntValue() uint32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Payload_DataSet_DataSetValue) GetLongValue() uint64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_LongValue); ok {
			return x.LongValue
		}
	}
	return 0
}

func (x *Payload_DataSet_DataSetValue) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Payload_DataSet_DataSetValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Payload_DataSet_DataSetValue) GetBooleanValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return false
}

func (x *Payload_DataSet_DataSetValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Payload_DataSet_DataSetValue) GetExtensionValue() *Payload_DataSet_DataSetValue_DataSetValueExtension {
	if x != nil {
		if x, ok := x.Value.(*Payload_DataSet_DataSetValue_ExtensionValue); ok {
			return x.ExtensionValue
		}
	}
	return nil
}

type isPayload_DataSet_DataSetValue_Value interface {
	isPayload_DataSet_DataSetValue_Value()
}

type Payload_DataSet_DataSetValue_IntValue struct {
	IntValue uint32 `protobuf:"varint,1,opt,name=int_value,json=intValue,oneof"`
}

type Payload_DataSet_DataSetValue_LongValue struct {
	LongValue uint64 `protobuf:"varint,2,opt,name=long_value,json=longValue,oneof"`
}

type Payload_DataSet_DataSetValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,oneof"`
}

type Payload_DataSet_DataSetValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,oneof"`
}

type Payload_DataSet_DataSetValue_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,5,opt,name=boolean_value,json=booleanValue,oneof"`
}

type Payload_DataSet_DataSetValue_StringValue struct {
	StringValue string `protobuf:"bytes,6,opt,name=string_value,json=stringValue,oneof"`
}

type Payload_DataSet_DataSetValue_ExtensionValue struct {
	ExtensionValue *Payload_DataSet_DataSetValue_DataSetValueExtension `protobuf:"bytes,7,opt,name=extension_value,json=extensionValue,oneof"`
}

func (*Payload_DataSet_DataSetValue_IntValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_LongValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_FloatValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_DoubleValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_BooleanValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_StringValue) isPayload_DataSet_DataSetValue_Value() {}

func (*Payload_DataSet_DataSetValue_ExtensionValue) isPayload_DataSet_DataSetValue_Value() {}

type Payload_DataSet_Row struct {
	state           protoimpl.MessageState          `protogen:"open.v1"`
	Elements        []*Payload_DataSet_DataSetValue `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_DataSet_Row) Reset() {
	*x = Payload_DataSet_Row{}
	mi := &file_sparkplug_b_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_DataSet_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_DataSet_Row) ProtoMessage() {}

func (x *Payload_DataSet_Row) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_DataSet_Row.ProtoReflect.Descriptor instead.
func (*Payload_DataSet_Row) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Payload_DataSet_Row) GetElements() []*Payload_DataSet_DataSetValue {
	if x != nil {
		return x.Elements
	}
	return nil
}

type Payload_DataSet_DataSetValue_DataSetValueExtension struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_DataSet_DataSetValue_DataSetValueExtension) Reset() {
	*x = Payload_DataSet_DataSetValue_DataSetValueExtension{}
	mi := &file_sparkplug_b_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_DataSet_DataSetValue_DataSetValueExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_DataSet_DataSetValue_DataSetValueExtension) ProtoMessage() {}

func (x *Payload_DataSet_DataSetValue_DataSetValueExtension) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_DataSet_DataSetValue_DataSetValueExtension.ProtoReflect.Descriptor instead.
func (*Payload_DataSet_DataSetValue_DataSetValueExtension) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

type Payload_PropertyValue_PropertyValueExtension struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_PropertyValue_PropertyValueExtension) Reset() {
	*x = Payload_PropertyValue_PropertyValueExtension{}
	mi := &file_sparkplug_b_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_PropertyValue_PropertyValueExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_PropertyValue_PropertyValueExtension) ProtoMessage() {}

func (x *Payload_PropertyValue_PropertyValueExtension) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_PropertyValue_PropertyValueExtension.ProtoReflect.Descriptor instead.
func (*Payload_PropertyValue_PropertyValueExtension) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 2, 0}
}

type Payload_Metric_MetricValueExtension struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Payload_Metric_MetricValueExtension) Reset() {
	*x = Payload_Metric_MetricValueExtension{}
	mi := &file_sparkplug_b_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload_Metric_MetricValueExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Metric_MetricValueExtension) ProtoMessage() {}

func (x *Payload_Metric_MetricValueExtension) ProtoReflect() protoreflect.Message {
	mi := &file_sparkplug_b_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Metric_MetricValueExtension.ProtoReflect.Descriptor instead.
func (*Payload_Metric_MetricValueExtension) Descriptor() ([]byte, []int) {
	return file_sparkplug_b_proto_rawDescGZIP(), []int{0, 6, 0}
}

var File_sparkplug_b_proto protoreflect.FileDescriptor

const file_sparkplug_b_proto_rawDesc = "" +
	"\n" +
	"\x11sparkplug_b.proto\x12\x19org.eclipse.tahu.protobuf\"\x87\x1c\n" +
	"\aPayload\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12C\n" +
	"\ametrics\x18\x02 \x03(\v2).org.eclipse.tahu.protobuf.Payload.MetricR\ametrics\x12\x10\n" +
	"\x03seq\x18\x03 \x01(\x04R\x03seq\x12\x12\n" +
	"\x04uuid\x18\x04 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x1a\xc4\x05\n" +
	"\bTemplate\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12C\n" +
	"\ametrics\x18\x02 \x03(\v2).org.eclipse.tahu.protobuf.Payload.MetricR\ametrics\x12U\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v25.org.eclipse.tahu.protobuf.Payload.Template.ParameterR\n" +
	"parameters\x12!\n" +
	"\ftemplate_ref\x18\x04 \x01(\tR\vtemplateRef\x12#\n" +
	"\ris_definition\x18\x05 \x01(\bR\fisDefinition\x1a\xaf\x03\n" +
	"\tParameter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\rR\x04type\x12\x1d\n" +
	"\tint_value\x18\x03 \x01(\rH\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"long_value\x18\x04 \x01(\x04H\x00R\tlongValue\x12!\n" +
	"\vfloat_value\x18\x05 \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\x06 \x01(\x01H\x00R\vdoubleValue\x12%\n" +
	"\rboolean_value\x18\a \x01(\bH\x00R\fbooleanValue\x12#\n" +
	"\fstring_value\x18\b \x01(\tH\x00R\vstringValue\x12x\n" +
	"\x0fextension_value\x18\t \x01(\v2M.org.eclipse.tahu.protobuf.Payload.Template.Parameter.ParameterValueExtensionH\x00R\x0eextensionValue\x1a#\n" +
	"\x17ParameterValueExtension*\b\b\x01\x10\x80\x80\x80\x80\x02B\a\n" +
	"\x05value*\b\b\x06\x10\x80\x80\x80\x80\x02\x1a\x9e\x05\n" +
	"\aDataSet\x12$\n" +
	"\x0enum_of_columns\x18\x01 \x01(\x04R\fnumOfColumns\x12\x18\n" +
	"\acolumns\x18\x02 \x03(\tR\acolumns\x12\x14\n" +
	"\x05types\x18\x03 \x03(\rR\x05types\x12B\n" +
	"\x04rows\x18\x04 \x03(\v2..org.eclipse.tahu.protobuf.Payload.DataSet.RowR\x04rows\x1a\x88\x03\n" +
	"\fDataSetValue\x12\x1d\n" +
	"\tint_value\x18\x01 \x01(\rH\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"long_value\x18\x02 \x01(\x04H\x00R\tlongValue\x12!\n" +
	"\vfloat_value\x18\x03 \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\x04 \x01(\x01H\x00R\vdoubleValue\x12%\n" +
	"\rboolean_value\x18\x05 \x01(\bH\x00R\fbooleanValue\x12#\n" +
	"\fstring_value\x18\x06 \x01(\tH\x00R\vstringValue\x12x\n" +
	"\x0fextension_value\x18\a \x01(\v2M.org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue.DataSetValueExtensionH\x00R\x0eextensionValue\x1a!\n" +
	"\x15DataSetValueExtension*\b\b\x01\x10\x80\x80\x80\x80\x02B\a\n" +
	"\x05value\x1ad\n" +
	"\x03Row\x12S\n" +
	"\belements\x18\x01 \x03(\v27.org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValueR\belements*\b\b\x02\x10\x80\x80\x80\x80\x02*\b\b\x05\x10\x80\x80\x80\x80\x02\x1a\xf5\x04\n" +
	"\rPropertyValue\x12\x12\n" +
	"\x04type\x18\x01 \x01(\rR\x04type\x12\x17\n" +
	"\ais_null\x18\x02 \x01(\bR\x06isNull\x12\x1d\n" +
	"\tint_value\x18\x03 \x01(\rH\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"long_value\x18\x04 \x01(\x04H\x00R\tlongValue\x12!\n" +
	"\vfloat_value\x18\x05 \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\x06 \x01(\x01H\x00R\vdoubleValue\x12%\n" +
	"\rboolean_value\x18\a \x01(\bH\x00R\fbooleanValue\x12#\n" +
	"\fstring_value\x18\b \x01(\tH\x00R\vstringValue\x12]\n" +
	"\x11propertyset_value\x18\t \x01(\v2..org.eclipse.tahu.protobuf.Payload.PropertySetH\x00R\x10propertysetValue\x12c\n" +
	"\x12propertysets_value\x18\n" +
	" \x01(\v22.org.eclipse.tahu.protobuf.Payload.PropertySetListH\x00R\x11propertysetsValue\x12r\n" +
	"\x0fextension_value\x18\v \x01(\v2G.org.eclipse.tahu.protobuf.Payload.PropertyValue.PropertyValueExtensionH\x00R\x0eextensionValue\x1a\"\n" +
	"\x16PropertyValueExtension*\b\b\x01\x10\x80\x80\x80\x80\x02B\a\n" +
	"\x05value\x1au\n" +
	"\vPropertySet\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\x12H\n" +
	"\x06values\x18\x02 \x03(\v20.org.eclipse.tahu.protobuf.Payload.PropertyValueR\x06values*\b\b\x03\x10\x80\x80\x80\x80\x02\x1am\n" +
	"\x0fPropertySetList\x12P\n" +
	"\vpropertyset\x18\x01 \x03(\v2..org.eclipse.tahu.protobuf.Payload.PropertySetR\vpropertyset*\b\b\x02\x10\x80\x80\x80\x80\x02\x1a\xef\x01\n" +
	"\bMetaData\x12\"\n" +
	"\ris_multi_part\x18\x01 \x01(\bR\visMultiPart\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x04R\x04size\x12\x10\n" +
	"\x03seq\x18\x04 \x01(\x04R\x03seq\x12\x1b\n" +
	"\tfile_name\x18\x05 \x01(\tR\bfileName\x12\x1b\n" +
	"\tfile_type\x18\x06 \x01(\tR\bfileType\x12\x10\n" +
	"\x03md5\x18\a \x01(\tR\x03md5\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription*\b\b\t\x10\x80\x80\x80\x80\x02\x1a\x9c\a\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05alias\x18\x02 \x01(\x04R\x05alias\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12\x1a\n" +
	"\bdatatype\x18\x04 \x01(\rR\bdatatype\x12#\n" +
	"\ris_historical\x18\x05 \x01(\bR\fisHistorical\x12!\n" +
	"\fis_transient\x18\x06 \x01(\bR\visTransient\x12\x17\n" +
	"\ais_null\x18\a \x01(\bR\x06isNull\x12G\n" +
	"\bmetadata\x18\b \x01(\v2+.org.eclipse.tahu.protobuf.Payload.MetaDataR\bmetadata\x12N\n" +
	"\n" +
	"properties\x18\t \x01(\v2..org.eclipse.tahu.protobuf.Payload.PropertySetR\n" +
	"properties\x12\x1d\n" +
	"\tint_value\x18\n" +
	" \x01(\rH\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"long_value\x18\v \x01(\x04H\x00R\tlongValue\x12!\n" +
	"\vfloat_value\x18\f \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\r \x01(\x01H\x00R\vdoubleValue\x12%\n" +
	"\rboolean_value\x18\x0e \x01(\bH\x00R\fbooleanValue\x12#\n" +
	"\fstring_value\x18\x0f \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\x10 \x01(\fH\x00R\n" +
	"bytesValue\x12Q\n" +
	"\rdataset_value\x18\x11 \x01(\v2*.org.eclipse.tahu.protobuf.Payload.DataSetH\x00R\fdatasetValue\x12T\n" +
	"\x0etemplate_value\x18\x12 \x01(\v2+.org.eclipse.tahu.protobuf.Payload.TemplateH\x00R\rtemplateValue\x12i\n" +
	"\x0fextension_value\x18\x13 \x01(\v2>.org.eclipse.tahu.protobuf.Payload.Metric.MetricValueExtensionH\x00R\x0eextensionValue\x1a \n" +
	"\x14MetricValueExtension*\b\b\x01\x10\x80\x80\x80\x80\x02B\a\n" +
	"\x05value*\b\b\x06\x10\x80\x80\x80\x80\x02*\xf2\x03\n" +
	"\bDataType\x12\v\n" +
	"\aUnknown\x10\x00\x12\b\n" +
	"\x04Int8\x10\x01\x12\t\n" +
	"\x05Int16\x10\x02\x12\t\n" +
	"\x05Int32\x10\x03\x12\t\n" +
	"\x05Int64\x10\x04\x12\t\n" +
	"\x05UInt8\x10\x05\x12\n" +
	"\n" +
	"\x06UInt16\x10\x06\x12\n" +
	"\n" +
	"\x06UInt32\x10\a\x12\n" +
	"\n" +
	"\x06UInt64\x10\b\x12\t\n" +
	"\x05Float\x10\t\x12\n" +
	"\n" +
	"\x06Double\x10\n" +
	"\x12\v\n" +
	"\aBoolean\x10\v\x12\n" +
	"\n" +
	"\x06String\x10\f\x12\f\n" +
	"\bDateTime\x10\r\x12\b\n" +
	"\x04Text\x10\x0e\x12\b\n" +
	"\x04UUID\x10\x0f\x12\v\n" +
	"\aDataSet\x10\x10\x12\t\n" +
	"\x05Bytes\x10\x11\x12\b\n" +
	"\x04File\x10\x12\x12\f\n" +
	"\bTemplate\x10\x13\x12\x0f\n" +
	"\vPropertySet\x10\x14\x12\x13\n" +
	"\x0fPropertySetList\x10\x15\x12\r\n" +
	"\tInt8Array\x10\x16\x12\x0e\n" +
	"\n" +
	"Int16Array\x10\x17\x12\x0e\n" +
	"\n" +
	"Int32Array\x10\x18\x12\x0e\n" +
	"\n" +
	"Int64Array\x10\x19\x12\x0e\n" +
	"\n" +
	"UInt8Array\x10\x1a\x12\x0f\n" +
	"\vUInt16Array\x10\x1b\x12\x0f\n" +
	"\vUInt32Array\x10\x1c\x12\x0f\n" +
	"\vUInt64Array\x10\x1d\x12\x0e\n" +
	"\n" +
	"FloatArray\x10\x1e\x12\x0f\n" +
	"\vDoubleArray\x10\x1f\x12\x10\n" +
	"\fBooleanArray\x10 \x12\x0f\n" +
	"\vStringArray\x10!\x12\x11\n" +
	"\rDateTimeArray\x10\"B,\n" +
	"\x19org.eclipse.tahu.protobufB\x0fSparkplugBProto"

var (
	file_sparkplug_b_proto_rawDescOnce sync.Once
	file_sparkplug_b_proto_rawDescData []byte
)

func file_sparkplug_b_proto_rawDescGZIP() []byte {
	file_sparkplug_b_proto_rawDescOnce.Do(func() {
		file_sparkplug_b_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sparkplug_b_proto_rawDesc), len(file_sparkplug_b_proto_rawDesc)))
	})
	return file_sparkplug_b_proto_rawDescData
}

var file_sparkplug_b_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sparkplug_b_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_sparkplug_b_proto_goTypes = []any{
	(DataType)(0),                                              // 0: org.eclipse.tahu.protobuf.DataType
	(*Payload)(nil),                                            // 1: org.eclipse.tahu.protobuf.Payload
	(*Payload_Template)(nil),                                   // 2: org.eclipse.tahu.protobuf.Payload.Template
	(*Payload_DataSet)(nil),                                    // 3: org.eclipse.tahu.protobuf.Payload.DataSet
	(*Payload_PropertyValue)(nil),                              // 4: org.eclipse.tahu.protobuf.Payload.PropertyValue
	(*Payload_PropertySet)(nil),                                // 5: org.eclipse.tahu.protobuf.Payload.PropertySet
	(*Payload_PropertySetList)(nil),                            // 6: org.eclipse.tahu.protobuf.Payload.PropertySetList
	(*Payload_MetaData)(nil),                                   // 7: org.eclipse.tahu.protobuf.Payload.MetaData
	(*Payload_Metric)(nil),                                     // 8: org.eclipse.tahu.protobuf.Payload.Metric
	(*Payload_Template_Parameter)(nil),                         // 9: org.eclipse.tahu.protobuf.Payload.Template.Parameter
	(*Payload_Template_Parameter_ParameterValueExtension)(nil), // 10: org.eclipse.tahu.protobuf.Payload.Template.Parameter.ParameterValueExtension
	(*Payload_DataSet_DataSetValue)(nil),                       // 11: org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue
	(*Payload_DataSet_Row)(nil),                                // 12: org.eclipse.tahu.protobuf.Payload.DataSet.Row
	(*Payload_DataSet_DataSetValue_DataSetValueExtension)(nil), // 13: org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue.DataSetValueExtension
	(*Payload_PropertyValue_PropertyValueExtension)(nil),       // 14: org.eclipse.tahu.protobuf.Payload.PropertyValue.PropertyValueExtension
	(*Payload_Metric_MetricValueExtension)(nil),                // 15: org.eclipse.tahu.protobuf.Payload.Metric.MetricValueExtension
}
var file_sparkplug_b_proto_depIdxs = []int32{
	8,  // 0: org.eclipse.tahu.protobuf.Payload.metrics:type_name -> org.eclipse.tahu.protobuf.Payload.Metric
	8,  // 1: org.eclipse.tahu.protobuf.Payload.Template.metrics:type_name -> org.eclipse.tahu.protobuf.Payload.Metric
	9,  // 2: org.eclipse.tahu.protobuf.Payload.Template.parameters:type_name -> org.eclipse.tahu.protobuf.Payload.Template.Parameter
	12, // 3: org.eclipse.tahu.protobuf.Payload.DataSet.rows:type_name -> org.eclipse.tahu.protobuf.Payload.DataSet.Row
	5,  // 4: org.eclipse.tahu.protobuf.Payload.PropertyValue.propertyset_value:type_name -> org.eclipse.tahu.protobuf.Payload.PropertySet
	6,  // 5: org.eclipse.tahu.protobuf.Payload.PropertyValue.propertysets_value:type_name -> org.eclipse.tahu.protobuf.Payload.PropertySetList
	14, // 6: org.eclipse.tahu.protobuf.Payload.PropertyValue.extension_value:type_name -> org.eclipse.tahu.protobuf.Payload.PropertyValue.PropertyValueExtension
	4,  // 7: org.eclipse.tahu.protobuf.Payload.PropertySet.values:type_name -> org.eclipse.tahu.protobuf.Payload.PropertyValue
	5,  // 8: org.eclipse.tahu.protobuf.Payload.PropertySetList.propertyset:type_name -> org.eclipse.tahu.protobuf.Payload.PropertySet
	7,  // 9: org.eclipse.tahu.protobuf.Payload.Metric.metadata:type_name -> org.eclipse.tahu.protobuf.Payload.MetaData
	5,  // 10: org.eclipse.tahu.protobuf.Payload.Metric.properties:type_name -> org.eclipse.tahu.protobuf.Payload.PropertySet
	3,  // 11: org.eclipse.tahu.protobuf.Payload.Metric.dataset_value:type_name -> org.eclipse.tahu.protobuf.Payload.DataSet
	2,  // 12: org.eclipse.tahu.protobuf.Payload.Metric.template_value:type_name -> org.eclipse.tahu.protobuf.Payload.Template
	15, // 13: org.eclipse.tahu.protobuf.Payload.Metric.extension_value:type_name -> org.eclipse.tahu.protobuf.Payload.Metric.MetricValueExtension
	10, // 14: org.eclipse.tahu.protobuf.Payload.Template.Parameter.extension_value:type_name -> org.eclipse.tahu.protobuf.Payload.Template.Parameter.ParameterValueExtension
	13, // 15: org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue.extension_value:type_name -> org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue.DataSetValueExtension
	11, // 16: org.eclipse.tahu.protobuf.Payload.DataSet.Row.elements:type_name -> org.eclipse.tahu.protobuf.Payload.DataSet.DataSetValue
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_sparkplug_b_proto_init() }
func file_sparkplug_b_proto_init() {
	if File_sparkplug_b_proto != nil {
		return
	}
	file_sparkplug_b_proto_msgTypes[3].OneofWrappers = []any{
		(*Payload_PropertyValue_IntValue)(nil),
		(*Payload_PropertyValue_LongValue)(nil),
		(*Payload_PropertyValue_FloatValue)(nil),
		(*Payload_PropertyValue_DoubleValue)(nil),
		(*Payload_PropertyValue_BooleanValue)(nil),
		(*Payload_PropertyValue_StringValue)(nil),
		(*Payload_PropertyValue_PropertysetValue)(nil),
		(*Payload_PropertyValue_PropertysetsValue)(nil),
		(*Payload_PropertyValue_ExtensionValue)(nil),
	}
	file_sparkplug_b_proto_msgTypes[7].OneofWrappers = []any{
		(*Payload_Metric_IntValue)(nil),
		(*Payload_Metric_LongValue)(nil),
		(*Payload_Metric_FloatValue)(nil),
		(*Payload_Metric_DoubleValue)(nil),
		(*Payload_Metric_BooleanValue)(nil),
		(*Payload_Metric_StringValue)(nil),
		(*Payload_Metric_BytesValue)(nil),
		(*Payload_Metric_DatasetValue)(nil),
		(*Payload_Metric_TemplateValue)(nil),
		(*Payload_Metric_ExtensionValue)(nil),
	}
	file_sparkplug_b_proto_msgTypes[8].OneofWrappers = []any{
		(*Payload_Template_Parameter_IntValue)(nil),
		(*Payload_Template_Parameter_LongValue)(nil),
		(*Payload_Template_Parameter_FloatValue)(nil),
		(*Payload_Template_Parameter_DoubleValue)(nil),
		(*Payload_Template_Parameter_BooleanValue)(nil),
		(*Payload_Template_Parameter_StringValue)(nil),
		(*Payload_Template_Parameter_ExtensionValue)(nil),
	}
	file_sparkplug_b_proto_msgTypes[10].OneofWrappers = []any{
		(*Payload_DataSet_DataSetValue_IntValue)(nil),
		(*Payload_DataSet_DataSetValue_LongValue)(nil),
		(*Payload_DataSet_DataSetValue_FloatValue)(nil),
		(*Payload_DataSet_DataSetValue_DoubleValue)(nil),
		(*Payload_DataSet_DataSetValue_BooleanValue)(nil),
		(*Payload_DataSet_DataSetValue_StringValue)(nil),
		(*Payload_DataSet_DataSetValue_ExtensionValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sparkplug_b_proto_rawDesc), len(file_sparkplug_b_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sparkplug_b_proto_goTypes,
		DependencyIndexes: file_sparkplug_b_proto_depIdxs,
		EnumInfos:         file_sparkplug_b_proto_enumTypes,
		MessageInfos:      file_sparkplug_b_proto_msgTypes,
	}.Build()
	File_sparkplug_b_proto = out.File
	file_sparkplug_b_proto_goTypes = nil
	file_sparkplug_b_proto_depIdxs = nil
}
